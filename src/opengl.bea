@project jopengl
@targetNamespace jopengl
@header 
	\#include <v8.h>
@cpp
	\#include <bea.h>
	\#include "jopengl.h"
	\#include <vector>
	\#include <windows.h>
	\#include <gl/gl.h>
	\#include "jopengl_m.h"

@include "glConstants.bea"

@namespace
	@type GLenum
	@type GLboolean
	@type GLbitfield
	@type GLbyte
	@type GLshort
	@type GLint
	@type GLsizei
	@type GLubyte
	@type GLushort
	@type GLuint
	@type GLfloat
	@type GLclampf
	@type GLdouble
	@type GLclampd
	@type GLvoid
	@type GLenum castfom int
	
	
	@static OpenGL
		
		void  glAccum (GLenum op, GLfloat value);			
		void  glAlphaFunc (GLenum func, GLclampf ref);
		GLboolean  glAreTexturesResident (GLsizei n, const GLuint *textures:@vector, GLboolean *residences:@vector);
		void  glArrayElement (GLint i);
		void  glBegin (GLenum mode);
		void  glBindTexture (GLenum target, GLuint texture);
		void  glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap:@external);
		void  glBlendFunc (GLenum sfactor, GLenum dfactor);
		void  glCallList (GLuint list);
		void  glCallLists (GLsizei n, GLenum type, const GLvoid *lists:@external);
		void  glClear (GLbitfield mask);
		void  glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
		void  glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
		void  glClearDepth (GLclampd depth);
		void  glClearIndex (GLfloat c);
		void  glClearStencil (GLint s);
		void  glClipPlane (GLenum plane, const GLdouble *equation:@vector);
		void  glColor3b (GLbyte red, GLbyte green, GLbyte blue);
		void  glColor3bv (const GLbyte *v:@vector);
		void  glColor3d (GLdouble red, GLdouble green, GLdouble blue);
		void  glColor3dv (const GLdouble *v:@vector);
		void  glColor3f (GLfloat red, GLfloat green, GLfloat blue);
		void  glColor3fv (const GLfloat *v:@vector);
		void  glColor3i (GLint red, GLint green, GLint blue);
		void  glColor3iv (const GLint *v:@vector);
		void  glColor3s (GLshort red, GLshort green, GLshort blue);
		void  glColor3sv (const GLshort *v:@vector);
		void  glColor3ub (GLubyte red, GLubyte green, GLubyte blue);
		void  glColor3ubv (const GLubyte *v:@vector);
		void  glColor3ui (GLuint red, GLuint green, GLuint blue);
		void  glColor3uiv (const GLuint *v:@vector);
		void  glColor3us (GLushort red, GLushort green, GLushort blue);
		void  glColor3usv (const GLushort *v:@vector);
		void  glColor4b (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
		void  glColor4bv (const GLbyte *v:@vector);
		void  glColor4d (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
		void  glColor4dv (const GLdouble *v:@vector);
		void  glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
		void  glColor4fv (const GLfloat *v:@vector);
		void  glColor4i (GLint red, GLint green, GLint blue, GLint alpha);
		void  glColor4iv (const GLint *v:@vector);
		void  glColor4s (GLshort red, GLshort green, GLshort blue, GLshort alpha);
		void  glColor4sv (const GLshort *v:@vector);
		void  glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
		void  glColor4ubv (const GLubyte *v:@vector);
		void  glColor4ui (GLuint red, GLuint green, GLuint blue, GLuint alpha);
		void  glColor4uiv (const GLuint *v:@vector);
		void  glColor4us (GLushort red, GLushort green, GLushort blue, GLushort alpha);
		void  glColor4usv (const GLushort *v:@vector);
		void  glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
		void  glColorMaterial (GLenum face, GLenum mode);
		void  glColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer:@external);
		void  glCopyPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
		void  glCopyTexImage1D (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLint border);
		void  glCopyTexImage2D (GLenum target, GLint level, GLenum internalFormat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
		void  glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
		void  glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
		void  glCullFace (GLenum mode);
		void  glDeleteLists (GLuint list, GLsizei range);
		void  glDeleteTextures (GLsizei n, const GLuint *textures:@vector);
		void  glDepthFunc (GLenum func);
		void  glDepthMask (GLboolean flag);
		void  glDepthRange (GLclampd zNear, GLclampd zFar);
		void  glDisable (GLenum cap);
		void  glDisableClientState (GLenum array);
		void  glDrawArrays (GLenum mode, GLint first, GLsizei count);
		void  glDrawBuffer (GLenum mode);
		void  glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices:@external);
		void  glDrawPixels (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels:@external);
		void  glEdgeFlag (GLboolean flag);
		void  glEdgeFlagPointer (GLsizei stride, const GLvoid *pointer:@external);
		void  glEdgeFlagv (const GLboolean *flag:@vector);
		void  glEnable (GLenum cap);
		void  glEnableClientState (GLenum array);
		void  glEnd ();
		void  glEndList ();
		void  glEvalCoord1d (GLdouble u);
		void  glEvalCoord1dv (const GLdouble *u:@vector);
		void  glEvalCoord1f (GLfloat u);
		void  glEvalCoord1fv (const GLfloat *u:@vector);
		void  glEvalCoord2d (GLdouble u, GLdouble v);
		void  glEvalCoord2dv (const GLdouble *u:@vector);
		void  glEvalCoord2f (GLfloat u, GLfloat v);
		void  glEvalCoord2fv (const GLfloat *u:@vector);
		void  glEvalMesh1 (GLenum mode, GLint i1, GLint i2);
		void  glEvalMesh2 (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
		void  glEvalPoint1 (GLint i);
		void  glEvalPoint2 (GLint i, GLint j);
		void  glFeedbackBuffer (GLsizei size, GLenum type, GLfloat *buffer:@external);
		void  glFinish ();
		void  glFlush ();
		void  glFogf (GLenum pname, GLfloat param);
		void  glFogfv (GLenum pname, const GLfloat *params:@vector);
		void  glFogi (GLenum pname, GLint param);
		void  glFogiv (GLenum pname, const GLint *params:@vector);
		void  glFrontFace (GLenum mode);
		void  glFrustum (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
		GLuint  glGenLists (GLsizei range);
		void  glGenTextures (GLsizei n, GLuint *textures:@external);
		void  glGetBooleanv (GLenum pname, GLboolean *params:@vector);
		void  glGetClipPlane (GLenum plane, GLdouble *equation:@vector);
		void  glGetDoublev (GLenum pname, GLdouble *params:@vector);
		GLenum  glGetError ();
		void  glGetFloatv (GLenum pname, GLfloat *params:@vector);
		void  glGetIntegerv (GLenum pname, GLint *params:@vector);
		void  glGetLightfv (GLenum light, GLenum pname, GLfloat *params:@vector);
		void  glGetLightiv (GLenum light, GLenum pname, GLint *params:@vector);
		void  glGetMapdv (GLenum target, GLenum query, GLdouble *v:@vector);
		void  glGetMapfv (GLenum target, GLenum query, GLfloat *v:@vector);
		void  glGetMapiv (GLenum target, GLenum query, GLint *v:@vector);
		void  glGetMaterialfv (GLenum face, GLenum pname, GLfloat *params:@vector);
		void  glGetMaterialiv (GLenum face, GLenum pname, GLint *params:@vector);
		void  glGetPixelMapfv (GLenum map, GLfloat *values:@vector);
		void  glGetPixelMapuiv (GLenum map, GLuint *values:@vector);
		void  glGetPixelMapusv (GLenum map, GLushort *values:@vector);
		void  glGetPointerv (GLenum pname, GLvoid* *params:@external);
		void  glGetPolygonStipple (GLubyte *mask:@vector);
		@manual const GLubyte *  glGetString (GLenum name);
		void  glGetTexEnvfv (GLenum target, GLenum pname, GLfloat *params:@vector);
		void  glGetTexEnviv (GLenum target, GLenum pname, GLint *params:@vector);
		void  glGetTexGendv (GLenum coord, GLenum pname, GLdouble *params:@vector);
		void  glGetTexGenfv (GLenum coord, GLenum pname, GLfloat *params:@vector);
		void  glGetTexGeniv (GLenum coord, GLenum pname, GLint *params:@vector);
		void  glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels:@external);
		void  glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params:@vector);
		void  glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params:@vector);
		void  glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params:@vector);
		void  glGetTexParameteriv (GLenum target, GLenum pname, GLint *params:@vector);
		void  glHint (GLenum target, GLenum mode);
		void  glIndexMask (GLuint mask);
		void  glIndexPointer (GLenum type, GLsizei stride, const GLvoid *pointer:@external);
		void  glIndexd (GLdouble c);
		void  glIndexdv (const GLdouble *c:@vector);
		void  glIndexf (GLfloat c);
		void  glIndexfv (const GLfloat *c:@vector);
		void  glIndexi (GLint c);
		void  glIndexiv (const GLint *c:@vector);
		void  glIndexs (GLshort c);
		void  glIndexsv (const GLshort *c:@vector);
		void  glIndexub (GLubyte c);
		void  glIndexubv (const GLubyte *c:@vector);
		void  glInitNames ();
		#void  glInterleavedArrays (GLenum format, GLsizei stride, const GLvoid *pointer);
		GLboolean  glIsEnabled (GLenum cap);
		GLboolean  glIsList (GLuint list);
		GLboolean  glIsTexture (GLuint texture);
		void  glLightModelf (GLenum pname, GLfloat param);
		void  glLightModelfv (GLenum pname, const GLfloat *params:@vector);
		void  glLightModeli (GLenum pname, GLint param);
		void  glLightModeliv (GLenum pname, const GLint *params:@vector);
		void  glLightf (GLenum light, GLenum pname, GLfloat param);
		void  glLightfv (GLenum light, GLenum pname, const GLfloat *params:@vector);
		void  glLighti (GLenum light, GLenum pname, GLint param);
		void  glLightiv (GLenum light, GLenum pname, const GLint *params:@vector);
		void  glLineStipple (GLint factor, GLushort pattern);
		void  glLineWidth (GLfloat width);
		void  glListBase (GLuint base);
		void  glLoadIdentity ();
		void  glLoadMatrixd (const GLdouble *m:@vector);
		void  glLoadMatrixf (const GLfloat *m:@vector);
		void  glLoadName (GLuint name);
		void  glLogicOp (GLenum opcode);
		void  glMap1d (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points:@vector);
		void  glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points:@vector);
		void  glMap2d (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points:@vector);
		void  glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points:@vector);
		void  glMapGrid1d (GLint un, GLdouble u1, GLdouble u2);
		void  glMapGrid1f (GLint un, GLfloat u1, GLfloat u2);
		void  glMapGrid2d (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
		void  glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
		void  glMaterialf (GLenum face, GLenum pname, GLfloat param);
		void  glMaterialfv (GLenum face, GLenum pname, const GLfloat *params:@vector);
		void  glMateriali (GLenum face, GLenum pname, GLint param);
		void  glMaterialiv (GLenum face, GLenum pname, const GLint *params:@vector);
		void  glMatrixMode (GLenum mode);
		void  glMultMatrixd (const GLdouble *m:@vector);
		void  glMultMatrixf (const GLfloat *m:@vector);
		void  glNewList (GLuint list, GLenum mode);
		void  glNormal3b (GLbyte nx, GLbyte ny, GLbyte nz);
		void  glNormal3bv (const GLbyte *v:@vector);
		void  glNormal3d (GLdouble nx, GLdouble ny, GLdouble nz);
		void  glNormal3dv (const GLdouble *v:@vector);
		void  glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);
		void  glNormal3fv (const GLfloat *v:@vector);
		void  glNormal3i (GLint nx, GLint ny, GLint nz);
		void  glNormal3iv (const GLint *v:@vector);
		void  glNormal3s (GLshort nx, GLshort ny, GLshort nz);
		void  glNormal3sv (const GLshort *v:@vector);
		void  glNormalPointer (GLenum type, GLsizei stride, const GLvoid *pointer:@external);
		void  glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
		void  glPassThrough (GLfloat token);
		void  glPixelMapfv (GLenum map, GLsizei mapsize, const GLfloat *values:@vector);
		void  glPixelMapuiv (GLenum map, GLsizei mapsize, const GLuint *values:@vector);
		void  glPixelMapusv (GLenum map, GLsizei mapsize, const GLushort *values:@vector);
		void  glPixelStoref (GLenum pname, GLfloat param);
		void  glPixelStorei (GLenum pname, GLint param);
		void  glPixelTransferf (GLenum pname, GLfloat param);
		void  glPixelTransferi (GLenum pname, GLint param);
		void  glPixelZoom (GLfloat xfactor, GLfloat yfactor);
		void  glPointSize (GLfloat size);
		void  glPolygonMode (GLenum face, GLenum mode);
		void  glPolygonOffset (GLfloat factor, GLfloat units);
		void  glPolygonStipple (const GLubyte *mask:@vector);
		void  glPopAttrib ();
		void  glPopClientAttrib ();
		void  glPopMatrix ();
		void  glPopName ();
		void  glPrioritizeTextures (GLsizei n, const GLuint *textures:@vector, const GLclampf *priorities:@vector);
		void  glPushAttrib (GLbitfield mask);
		void  glPushClientAttrib (GLbitfield mask);
		void  glPushMatrix ();
		void  glPushName (GLuint name);
		void  glRasterPos2d (GLdouble x, GLdouble y);
		void  glRasterPos2dv (const GLdouble *v:@vector);
		void  glRasterPos2f (GLfloat x, GLfloat y);
		void  glRasterPos2fv (const GLfloat *v:@vector);
		void  glRasterPos2i (GLint x, GLint y);
		void  glRasterPos2iv (const GLint *v:@vector);
		void  glRasterPos2s (GLshort x, GLshort y);
		void  glRasterPos2sv (const GLshort *v:@vector);
		void  glRasterPos3d (GLdouble x, GLdouble y, GLdouble z);
		void  glRasterPos3dv (const GLdouble *v:@vector);
		void  glRasterPos3f (GLfloat x, GLfloat y, GLfloat z);
		void  glRasterPos3fv (const GLfloat *v:@vector);
		void  glRasterPos3i (GLint x, GLint y, GLint z);
		void  glRasterPos3iv (const GLint *v:@vector);
		void  glRasterPos3s (GLshort x, GLshort y, GLshort z);
		void  glRasterPos3sv (const GLshort *v:@vector);
		void  glRasterPos4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
		void  glRasterPos4dv (const GLdouble *v:@vector);
		void  glRasterPos4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
		void  glRasterPos4fv (const GLfloat *v:@vector);
		void  glRasterPos4i (GLint x, GLint y, GLint z, GLint w);
		void  glRasterPos4iv (const GLint *v:@vector);
		void  glRasterPos4s (GLshort x, GLshort y, GLshort z, GLshort w);
		void  glRasterPos4sv (const GLshort *v:@vector);
		void  glReadBuffer (GLenum mode);
		void  glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels:@external);
		void  glRectd (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
		void  glRectdv (const GLdouble *v1:@vector, const GLdouble *v2:@vector);
		void  glRectf (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
		void  glRectfv (const GLfloat *v1:@vector, const GLfloat *v2:@vector);
		void  glRecti (GLint x1, GLint y1, GLint x2, GLint y2);
		void  glRectiv (const GLint *v1:@vector, const GLint *v2:@vector);
		void  glRects (GLshort x1, GLshort y1, GLshort x2, GLshort y2);
		void  glRectsv (const GLshort *v1:@vector, const GLshort *v2:@vector);
		GLint  glRenderMode (GLenum mode);
		void  glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
		void  glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
		void  glScaled (GLdouble x, GLdouble y, GLdouble z);
		void  glScalef (GLfloat x, GLfloat y, GLfloat z);
		void  glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
		void  glSelectBuffer (GLsizei size, GLuint *buffer:@external);
		void  glShadeModel (GLenum mode);
		void  glStencilFunc (GLenum func, GLint ref, GLuint mask);
		void  glStencilMask (GLuint mask);
		void  glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
		void  glTexCoord1d (GLdouble s);
		void  glTexCoord1dv (const GLdouble *v:@vector);
		void  glTexCoord1f (GLfloat s);
		void  glTexCoord1fv (const GLfloat *v:@vector);
		void  glTexCoord1i (GLint s);
		void  glTexCoord1iv (const GLint *v:@vector);
		void  glTexCoord1s (GLshort s);
		void  glTexCoord1sv (const GLshort *v:@vector);
		void  glTexCoord2d (GLdouble s, GLdouble t);
		void  glTexCoord2dv (const GLdouble *v:@vector);
		void  glTexCoord2f (GLfloat s, GLfloat t);
		void  glTexCoord2fv (const GLfloat *v:@vector);
		void  glTexCoord2i (GLint s, GLint t);
		void  glTexCoord2iv (const GLint *v:@vector);
		void  glTexCoord2s (GLshort s, GLshort t);
		void  glTexCoord2sv (const GLshort *v:@vector);
		void  glTexCoord3d (GLdouble s, GLdouble t, GLdouble r);
		void  glTexCoord3dv (const GLdouble *v:@vector);
		void  glTexCoord3f (GLfloat s, GLfloat t, GLfloat r);
		void  glTexCoord3fv (const GLfloat *v:@vector);
		void  glTexCoord3i (GLint s, GLint t, GLint r);
		void  glTexCoord3iv (const GLint *v:@vector);
		void  glTexCoord3s (GLshort s, GLshort t, GLshort r);
		void  glTexCoord3sv (const GLshort *v:@vector);
		void  glTexCoord4d (GLdouble s, GLdouble t, GLdouble r, GLdouble q);
		void  glTexCoord4dv (const GLdouble *v:@vector);
		void  glTexCoord4f (GLfloat s, GLfloat t, GLfloat r, GLfloat q);
		void  glTexCoord4fv (const GLfloat *v:@vector);
		void  glTexCoord4i (GLint s, GLint t, GLint r, GLint q);
		void  glTexCoord4iv (const GLint *v:@vector);
		void  glTexCoord4s (GLshort s, GLshort t, GLshort r, GLshort q);
		void  glTexCoord4sv (const GLshort *v:@vector);
		void  glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer:@external);
		void  glTexEnvf (GLenum target, GLenum pname, GLfloat param);
		void  glTexEnvfv (GLenum target, GLenum pname, const GLfloat *params:@vector);
		void  glTexEnvi (GLenum target, GLenum pname, GLint param);
		void  glTexEnviv (GLenum target, GLenum pname, const GLint *params:@vector);
		void  glTexGend (GLenum coord, GLenum pname, GLdouble param);
		void  glTexGendv (GLenum coord, GLenum pname, const GLdouble *params:@vector);
		void  glTexGenf (GLenum coord, GLenum pname, GLfloat param);
		void  glTexGenfv (GLenum coord, GLenum pname, const GLfloat *params:@vector);
		void  glTexGeni (GLenum coord, GLenum pname, GLint param);
		void  glTexGeniv (GLenum coord, GLenum pname, const GLint *params:@vector);
		void  glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels:@external);
		void  glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels:@external);
		void  glTexParameterf (GLenum target, GLenum pname, GLfloat param);
		void  glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params:@vector);
		void  glTexParameteri (GLenum target, GLenum pname, GLint param);
		void  glTexParameteriv (GLenum target, GLenum pname, const GLint *params:@vector);
		void  glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels:@external);
		void  glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels:@external);
		void  glTranslated (GLdouble x, GLdouble y, GLdouble z);
		void  glTranslatef (GLfloat x, GLfloat y, GLfloat z);
		void  glVertex2d (GLdouble x, GLdouble y);
		void  glVertex2dv (const GLdouble *v:@vector);
		void  glVertex2f (GLfloat x, GLfloat y);
		void  glVertex2fv (const GLfloat *v:@vector);
		void  glVertex2i (GLint x, GLint y);
		void  glVertex2iv (const GLint *v:@vector);
		void  glVertex2s (GLshort x, GLshort y);
		void  glVertex2sv (const GLshort *v:@vector);
		void  glVertex3d (GLdouble x, GLdouble y, GLdouble z);
		void  glVertex3dv (const GLdouble *v:@vector);
		void  glVertex3f (GLfloat x, GLfloat y, GLfloat z);
		void  glVertex3fv (const GLfloat *v:@vector);
		void  glVertex3i (GLint x, GLint y, GLint z);
		void  glVertex3iv (const GLint *v:@vector);
		void  glVertex3s (GLshort x, GLshort y, GLshort z);
		void  glVertex3sv (const GLshort *v:@vector);
		void  glVertex4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
		void  glVertex4dv (const GLdouble *v:@vector);
		void  glVertex4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
		void  glVertex4fv (const GLfloat *v:@vector);
		void  glVertex4i (GLint x, GLint y, GLint z, GLint w);
		void  glVertex4iv (const GLint *v:@vector);
		void  glVertex4s (GLshort x, GLshort y, GLshort z, GLshort w);
		void  glVertex4sv (const GLshort *v:@vector);
		void  glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer:@external);
		void  glViewport (GLint x, GLint y, GLsizei width, GLsizei height);